"
" Plugins
"
" vundle
Plugin 'VundleVim/Vundle.vim'

if has("win32")
    Plugin 'zcodes/vim-misc'
    Plugin 'zcodes/vim-shell'
endif

" bufexplorer
Plugin 'c9s/bufexplorer'

" nerdtree {{{
Plugin 'scrooloose/nerdtree'
let g:NERDTreeDirArrowExpandable="+"
let g:NERDTreeDirArrowCollapsible="~"
let g:NERDTreeMinimalUI=1
let NERDTreeDirArrows=0
nmap <F3> :NERDTreeFocus<cr>
nmap <F4> :NERDTreeClose<cr>
nmap <F5> :TagbarToggle<cr>
" }}}

" snipmate and snippets {{{
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
" }}}

" Emmet {{{
" C-y , expand expression
Plugin 'mattn/emmet-vim'

" https://github.com/mattn/emmet-vim/issues/168
let g:user_emmet_install_global = 0
let g:user_emmet_complete_tag = 1
autocmd FileType html,css,blade,twig EmmetInstall
" }}}

" File Searching
" Plugin 'rking/ag.vim'
" let g:ag_prg="ag --vimgrep"
" let g:ag_mapping_message = 0
Plugin 'mileszs/ack.vim'
let g:ackprg='ag --vimgrep'

" comment
Plugin 'tpope/vim-commentary'

" ctrlp {{{
" Plugin 'kien/ctrlp.vim'
" https://ctrlpvim.github.io/ctrlp.vim/
Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_use_caching = 1
if has('win32')
    set wildignore+=*\\tmp\\*,*\\.git\\*,*\\.hg\\*,*\\.svn\\*,*.swp,*.zip,*.exe
    " let g:ctrlp_user_command = 'dir %s /-n /b /s /a-d'
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/tmp/*,*.so,*.swp,*.zip
    " let g:ctrlp_user_command = 'find %s -type f'
endif
" let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
            \ 'dir': '\v[\/]\.(git|hg|svn)$',
            \ 'file': '\v\.(exe|so|dll)$',
            \ }
" }}}

" git plugin
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'

" SuperTabs
Plugin 'ervandew/supertab'

" Taglist
" Plugin 'zcodes/taglist.vim'
Plugin 'majutsushi/tagbar'
let g:tagbar_show_linenumbers = 2
let g:tagbar_foldlevel = 2

" airline {{{
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
if has('gui_running')
    let g:airline_theme = 'tomorrow'
else
    let g:airline_theme = 'raven'
endif
let g:airline_powerline_fonts=0

" Powerline
" Plugin 'Lokaltog/vim-powerline'
" }}}

" Update Last Change Time
" Plugin 'vim-scripts/update-time'

" color themes {{{
" ------------------------------
Plugin 'chriskempson/vim-tomorrow-theme'
Plugin 'mkarmona/colorsbox'
Plugin 'mkarmona/materialbox'
Plugin 'zcodes/vim-colors-basic'
" Plugin 'wimstefan/Lightning'
" Plugin 'romainl/Apprentice'
" Plugin 'vim-scripts/moria'
" Plugin 'vim-scripts/bclear'
" Plugin 'vim-scripts/beauty256'
" Plugin 'iissnan/tangoX'
" Plugin 'vim-scripts/earendel'
" Plugin 'tomasr/molokai'
" Plugin 'altercation/vim-colors-solarized'
" Plugin 'zcodes/vim-color-cleanroom'
" Plugin 'marciomazza/vim-brogrammer-theme'
" Plugin 'jscappini/material.vim'
" Plugin 'mhinz/vim-janah'
" Plugin 'the31k/vim-colors-tayra'
" Plugin 'GGalizzi/cake-vim'
" Plugin 'DeepAnchor/enigma.vim'
" Plugin 'vim-scripts/obsidian2.vim'
" Plugin 'trevorrjohn/vim-obsidian'
" Plugin 'adampasz/stonewashed-themes'
" Plugin 'petelewis/vim-evolution'
" Plugin 'notpratheek/vim-luna'
" Plugin 'NLKNguyen/papercolor-theme'
" Plugin 'fent/vim-frozen'
" Plugin 'jlund3/colorschemer'
" Plugin 'scheakur/vim-scheakur'
" Plugin 'endel/vim-github-colorscheme'
" Plugin 'nelstrom/vim-mac-classic-theme'
" Plugin 'DAddYE/soda.vim'
"
" }}}

" filetype plugin {{{
" ------------------------------
Plugin 'pangloss/vim-javascript'
Plugin 'elzr/vim-json'
Plugin 'plasticboy/vim-markdown'
Plugin 'evidens/vim-twig'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'vim-ruby/vim-ruby'
Plugin 'StanAngeloff/php.vim'
Plugin 'rodjek/vim-puppet'
Plugin 'JulesWang/css.vim'
Plugin 'genoma/vim-less'
Plugin 'klen/python-mode'
Plugin 'digitaltoad/vim-jade'
Plugin 'zcodes/vim-coffee-script'
Plugin 'othree/html5.vim'
Plugin 'zcodes/vim-blade'
Plugin 'fatih/vim-go'
" Plugin 'AndrewRadev/vim-eco'
Plugin 'zcodes/vim-eco'
Plugin 'leafgarland/typescript-vim'
" }}}

" preview colors
Plugin 'gorodinskiy/vim-coloresque'
Plugin 'lilydjwg/colorizer'

" auto-pairs {{{
Plugin 'jiangmiao/auto-pairs'
" <BS> will conflict with SCIM with 'Embered Preedit String into client
" window' option enabled
" let g:AutoPairsMapBS = 0
" }}}

" vim-choosewin {{{
Plugin 't9md/vim-choosewin'
nmap - <Plug>(choosewin)
let g:choosewin_overlay_enable = 0
" }}}

" pangu {{{
Plugin 'zcodes/pangu.vim'
if has('autocmd')
    augroup enablePanGu
        au!
        autocmd BufWritePre *.markdown,*.md,*.txt,*.wiki call PanGuSpacing()
    augroup END
endif
" }}}

" text align
Plugin 'godlygeek/tabular'

" vimwiki {{{
Plugin 'vimwiki/vimwiki'
let wiki_vim = {}
if has('win32')
    let wiki_vim.base_path = '~/vimfiles/'
else
    let wiki_vim.base_path = '~/.vim/'
endif
let wiki_vim.path = wiki_vim.base_path . 'wiki/'
let wiki_vim.path_html = wiki_vim.base_path . 'wiki_html/'
let wiki_vim.template_path = wiki_vim.base_path . 'wiki_templates/'
let wiki_vim.template_default = 'default'
let wiki_vim.template_ext = '.html'
let wiki_vim.auto_export = 1

let wiki_user = {}
let wiki_user.path = '~/vimwiki'
let wiki_user.paht_html = '~/vimwiki_html'
let g:vimwiki_list = [wiki_vim, wiki_user]
" }}}

" vim: ts=4 sts=4 sw=4 et fdm=marker
